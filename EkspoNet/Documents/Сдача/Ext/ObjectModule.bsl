
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ПолучательУведомлений.Пустая() Тогда
		ПолучательУведомлений = Справочники.Пользователи.НайтиПоРеквизиту("УникальныйИдентификатор",ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор);
	КонецЕсли;
	
	Для Каждого СтрокаЭкспонат Из Экспонаты Цикл
		
		Если ВидПриемки = Перечисления.ВидыПриемкиЭкспонатов.Автоматический Тогда
			//что-то
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаЭкспонат.Экспонат) Тогда
			ОбъектЭкспонат = СтрокаЭкспонат.Экспонат.ПолучитьОбъект();
		Иначе
			ОбъектЭкспонат = Справочники.Экспонаты.СоздатьЭлемент();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОбъектЭкспонат, СтрокаЭкспонат);
		
		Если ЗначениеЗаполнено(Дата) Тогда 
			ОбъектЭкспонат.ДатаИВремяПриемки = Дата;
		Иначе   
			ОбъектЭкспонат.ДатаИВремяПриемки = ТекущаяДата();
		КонецЕсли;		
		
		ОбъектЭкспонат.ПолучательУведомлений = ПолучательУведомлений;
		ОбъектЭкспонат.Наименование = "№" + ОбъектЭкспонат.Идентификатор + " Название экспоната: " + ОбъектЭкспонат.НазваниеЭкспоната;
		
		ОбъектЭкспонат.Автор = СтрокаЭкспонат.Автор;
		ОбъектЭкспонат.Описание = СтрокаЭкспонат.Описание;
		ОбъектЭкспонат.Сохранность = СтрокаЭкспонат.Сохранность;
		
		ОбъектЭкспонат.Записать();
		СтрокаЭкспонат.Экспонат = ОбъектЭкспонат.Ссылка;
		
	КонецЦикла;
	
	Если ПолучательУведомлений.Пустая() Тогда
		ПолучательУведомлений = Справочники.Пользователи.НайтиПоРеквизиту("УникальныйИдентификатор",ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор);
	КонецЕсли;

	ОбъектЭкспонат.Записать();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр ЭкспонатыНаСкладах Приход
	Движения.ЭкспонатыНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаЭкспонаты Из Экспонаты Цикл
		
		Если ВидПриемки = Перечисления.ВидыПриемкиЭкспонатов.Автоматический И ТекСтрокаЭкспонаты.Ячейка.Пустая() Тогда
			ТекСтрокаЭкспонаты.Ячейка = ПолучитьЯчейку();
			
			Если ТекСтрокаЭкспонаты.Ячейка.Пустая() Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нет свободной ячейки";
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
			
		ИначеЕсли ВидПриемки = Перечисления.ВидыПриемкиЭкспонатов.Ручной и НЕ ТекСтрокаЭкспонаты.МаленькийЭкспонат Тогда
			Если ЯчейкаЗанята(ТекСтрокаЭкспонаты.Ячейка) Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Ячейка занята: " + Строка(ТекСтрокаЭкспонаты.Ячейка);
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Движение = Движения.ЭкспонатыНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Ячейка = ТекСтрокаЭкспонаты.Ячейка;
		Движение.Экспонат = ТекСтрокаЭкспонаты.Экспонат;
		Движение.Количество = 1; 
		
		Движения.ЭкспонатыНаСкладах.Записать(Истина);
		
	КонецЦикла;
	
	ПроверкаНаНаличиеСвободныхЯчеек();

КонецПроцедуры

Функция ПолучитьЯчейку()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Ячейки.Ссылка КАК Ячейка,
		|	СУММА(ЕСТЬNULL(ЭкспонатыНаСкладахОстатки.КоличествоОстаток, 0)) КАК КолВоЭкспонатов
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Справочник.Ячейки КАК Ячейки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭкспонатыНаСкладах.Остатки КАК ЭкспонатыНаСкладахОстатки
		|		ПО Ячейки.Ссылка = ЭкспонатыНаСкладахОстатки.Ячейка
		|
		|СГРУППИРОВАТЬ ПО
		|	Ячейки.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Ячейка КАК Ячейка,
		|	ВТ.КолВоЭкспонатов КАК КолВоЭкспонатов
		|ИЗ
		|	ВТ КАК ВТ
		|ГДЕ
		|	ВТ.КолВоЭкспонатов = 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ячейка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ячейка;
	КонецЦикла;
	
	Возврат Справочники.Ячейки.ПустаяСсылка();
	
КонецФункции

Процедура ПриКопировании(ОбъектКопирования)
	Экспонаты.Очистить();
КонецПроцедуры

Функция ПроверкаНаНаличиеСвободныхЯчеек()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Ячейки.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ЭкспонатыНаСкладахОстатки.КоличествоОстаток, 0) КАК Экспонатов
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Справочник.Ячейки КАК Ячейки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭкспонатыНаСкладах.Остатки КАК ЭкспонатыНаСкладахОстатки
		|		ПО Ячейки.Ссылка = ЭкспонатыНаСкладахОстатки.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Ссылка КАК Ссылка,
		|	ВТ.Экспонатов КАК Экспонатов
		|ИЗ
		|	ВТ КАК ВТ
		|ГДЕ
		|	ВТ.Экспонатов = 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "На складе закончились ячейки";
		Сообщение.Сообщить();
		
	КонецЕсли;
	
КонецФункции

Функция ЯчейкаЗанята(Ячейка)
	
	ЭкспонатовВЯчейке = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭкспонатыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ЭкспонатыНаСкладах.Остатки(, Ячейка = &Ячейка) КАК ЭкспонатыНаСкладахОстатки";
	
	Запрос.УстановитьПараметр("Ячейка", Ячейка);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЭкспонатовВЯчейке = ЭкспонатовВЯчейке + ВыборкаДетальныеЗаписи.КоличествоОстаток;
	КонецЦикла;
	
	Если ЭкспонатовВЯчейке > 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

	
	
КонецФункции

